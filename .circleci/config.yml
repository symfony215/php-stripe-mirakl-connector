# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.3
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: composer install -n --prefer-dist
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
            - ./bin/.phpunit
      - persist_to_workspace:
          root: ./
          paths:
            - ./
  deploy:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.3
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - setup_remote_docker:
          docker_layer_caching: true
      - add_ssh_keys:
          fingerprints:
            - "98:fa:b6:08:17:31:0e:fc:90:72:54:c3:5b:ad:43:99"
      - run: |
          docker login cloud.canister.io:5000 -u $DOCKER_USER -p $DOCKER_PASS
          SKIP_XDEBUG=true docker build \
            -f docker/php-fpm/Dockerfile \
            -t "cloud.canister.io:5000/kraynel/stripe-mirakl-connector-php:$CIRCLE_BRANCH" .
          docker push "cloud.canister.io:5000/kraynel/stripe-mirakl-connector-php"
          echo "$STAGING_HOST ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBE48DCMScGgWuKSa7JvsKbl50HpjGM5j4NqVWKBJ4t0c7I8gu49Pwe9jKTb695mt77Pp8bc/2hPLKhb5x/sXBuw=" >> ~/.ssh/known_hosts
          ssh $STAGING_USER@$STAGING_HOST "/home/ubuntu/deploy.sh"
  release:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.3
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - setup_remote_docker:
          docker_layer_caching: true
      - run: |
          docker login cloud.canister.io:5000 -u $DOCKER_USER -p $DOCKER_PASS
          SKIP_XDEBUG=true docker build \
            -f docker/php-fpm/Dockerfile \
            -t "cloud.canister.io:5000/kraynel/stripe-mirakl-connector-php:$CIRCLE_TAG" \
            -t "cloud.canister.io:5000/kraynel/stripe-mirakl-connector-php:latest" .
          docker push "cloud.canister.io:5000/kraynel/stripe-mirakl-connector-php"
  phpcs:
    docker:
      - image: circleci/php:7.3
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: PHP-CS
          command: ./vendor/bin/php-cs-fixer --ansi fix src -vvv --path-mode=intersection --dry-run
  phpunit:
    docker:
      - image: circleci/php:7.3
    environment:
      - APP_ENV: test
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Enable PCOV, disable Xdebug
          command: |
            sudo pecl install pcov
            sudo docker-php-ext-enable pcov
            sudo rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - run:
          name: PHPUnit
          command: ./bin/phpunit
      - codecov/upload:
          file: clover.xml
  phpstan:
    docker:
      - image: circleci/php:7.3
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: PHPStan
          command: ./vendor/bin/phpstan analyse src --level=max
workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - phpstan:
          requires:
            - build
      - phpcs:
          requires:
            - build
      - phpunit:
          requires:
            - build
      - release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
